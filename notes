radek_1a = SoundPreprocessor('radek_1a', test_filename_1)
radek_1b = SoundPreprocessor('radek_1b', test_filename_2)
paulina_1a = SoundPreprocessor('paulina_1a', test_filename_3)
paulina_1b = SoundPreprocessor('paulina_1b', test_filename_4)
inez_1a = SoundPreprocessor('inez_1a', test_filename_5)
inez_1b = SoundPreprocessor('inez_1b', test_filename_6)
krzysztof_1a = SoundPreprocessor('krzysztof_1a', test_filename_7)
krzysztof_1b = SoundPreprocessor('krzysztof_1b', test_filename_8)
maciej_1a = SoundPreprocessor('maciej_1a', test_filename_9)
maciej_1b = SoundPreprocessor('maciej_1b', test_filename_10)
wojtek_1a = SoundPreprocessor('wojtek_1a', test_filename_11)
wojtek_1b = SoundPreprocessor('wojtek_1b', test_filename_12)

radek_1a.convert_stereo_to_mono()
radek_1b.convert_stereo_to_mono()
paulina_1a.convert_stereo_to_mono()
paulina_1b.convert_stereo_to_mono()
inez_1a.convert_stereo_to_mono()
inez_1b.convert_stereo_to_mono()
krzysztof_1a.convert_stereo_to_mono()
krzysztof_1b.convert_stereo_to_mono()
maciej_1a.convert_stereo_to_mono()
maciej_1b.convert_stereo_to_mono()
wojtek_1a.convert_stereo_to_mono()
wojtek_1b.convert_stereo_to_mono()

radek_1a.fourier_transform_audio()
radek_1b.fourier_transform_audio()
paulina_1a.fourier_transform_audio()
paulina_1b.fourier_transform_audio()
inez_1a.fourier_transform_audio()
inez_1b.fourier_transform_audio()
krzysztof_1a.fourier_transform_audio()
krzysztof_1b.fourier_transform_audio()
maciej_1a.fourier_transform_audio()
maciej_1b.fourier_transform_audio()
wojtek_1a.fourier_transform_audio()
wojtek_1b.fourier_transform_audio()

radek_1a.minmax_array_numpy()
radek_1b.minmax_array_numpy()
paulina_1a.minmax_array_numpy()
paulina_1b.minmax_array_numpy()
inez_1a.minmax_array_numpy()
inez_1b.minmax_array_numpy()
krzysztof_1a.minmax_array_numpy()
krzysztof_1b.minmax_array_numpy()
maciej_1a.minmax_array_numpy()
maciej_1b.minmax_array_numpy()
wojtek_1a.minmax_array_numpy()
wojtek_1b.minmax_array_numpy()

radek_1a.save_audio_image()
radek_1b.save_audio_image()
paulina_1a.save_audio_image()
paulina_1b.save_audio_image()
inez_1a.save_audio_image()
inez_1b.save_audio_image()
krzysztof_1a.save_audio_image()
krzysztof_1b.save_audio_image()
maciej_1a.save_audio_image()
maciej_1b.save_audio_image()
wojtek_1a.save_audio_image()
wojtek_1b.save_audio_image()

sound1.plot_audio()
sound2.plot_audio()
sound3.plot_audio()
sound4.plot_audio()

az functionapp create --resource-group v_biometrics_resource_group --os-type Linux --consumption-plan-location westeurope --runtime python --name TestHttpTrigger1 --storage-account vbiometricsstorage

create_voice_image('inez_1', 'src/test_sounds/Inez_1a.wav', 'src/test_sounds/Inez_1b.wav')


test1 = ImagePreprocessor('src/sound_images/inez_1a', 'src/sound_images/inez_1b.png')
test2 = ImagePreprocessor('src/sound_images/inez_1a', 'src/sound_images/paulina_1a.png')
test3 = ImagePreprocessor('src/sound_images/maciej_1a', 'src/sound_images/maciej_1b.png')
test4 = ImagePreprocessor('src/sound_images/maciej_1a', 'src/sound_images/wojtek_1a.png')
test5 = ImagePreprocessor('src/sound_images/wojtek_1a', 'src/sound_images/wojtek_1b.png')
test6 = ImagePreprocessor('src/sound_images/wojtek_1a', 'src/sound_images/radek_1b.png')

@staticmethod
    def upload_voice_image(user_id: int, image_filepath: str):
        # TODO: something wrong with filepath(2)
        query = f"""INSERT INTO [dbo].[Voice_Images] (id, voice_array)
                            SELECT {user_id}, *
                            FROM OPENROWSET(BULK '{image_filepath}', SINGLE_BLOB) IMG_DATA
                            WITH
                              (
                                 FIELDTERMINATOR =',',
                                 ROWTERMINATOR ='\n'
                              );"""